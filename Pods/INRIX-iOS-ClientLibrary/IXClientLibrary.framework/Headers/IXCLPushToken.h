/*
 * @header IXCLPushToken.h
 * @abstract An IXCLPushToken enables INRIX to deliver Pre-Drive Alert
 *      and other push notifications to a device.
 *
 * @author Patrick Winchell
 * @updated 03-19-2015
 * @copyright Copyright (c) 2015 INRIX, Inc.
 *
 *  INRIX is a registered trademark of INRIX, Inc.  Any copyright, patent and
 *  trademark notice(s) contained herein or in related code, files or
 *  documentation shall not be altered and shall be included in all copies and
 *  substantial portions of the software. This software is "Source Code".
 *  Refer to the License.pdf file for your rights to use this software.
 */

#import <Foundation/Foundation.h>

//-----------------------------------------------------------------------------
#pragma mark - Class Declaration

/*!
 * @class IXCLPushToken
 * @abstract An IXCLPushToken provides INRIX with the necessary information to
 *      send Pre-Drive Alerts and other push notifications to a specific device.
 *      Once instantiated, send the IXCLPushToken to INRIX using
 *      IXCLAuthController's requestUpdatePushNotificationToken method.
 *
 */
@interface IXCLPushToken : NSObject <NSCopying, NSCoding>

//-----------------------------------------------------------------------------
#pragma mark - Properties

/*!
 * @abstract Provider push token.
 */
@property (nonatomic, strong, readwrite) NSString * token;

/*!
 * @abstract INRIX push channel identifier.
 */
@property (nonatomic, strong, readwrite) NSString * channel;

/*!
 * @abstract Push notification service type.
 */
@property (nonatomic, strong, readwrite) NSString * type;

//-----------------------------------------------------------------------------
#pragma mark - Methods

/*!
 * @abstract
 *      Initialize a push token which can be registered with INRIX servers.
 *
 * @param token
 *      Provider token or device identifier generated by the push provider.
 *
 * @param channel
 *      INRIX-assigned channel identifier. This value is independent of any
 *      push-provider configured channels.
 *
 * @param type
 *      Push notification service type. For iOS, this value is typically
 *      @"APNS".
 *
 * @return
 *      Instance of the IXCLPushToken class.
 */
- (instancetype) initWithToken: (NSString *) token channel: (NSString *) channel andType: (NSString *) type;

/*!
 * @abstract
 *      Check if the push token is valid.
 *
 * @return
 *      Bool indicating if the token is valid.
 */
- (BOOL) isValid;

@end
